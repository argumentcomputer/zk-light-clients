name: Benchmark pull requests
on:
  issue_comment:
    types: [ created ]

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  benchmark:
    name: PR benchmark comment
    runs-on: ${{ matrix.runner_label }}
    strategy:
      matrix:
        include:
          - runner_label: warp-ubuntu-latest-x64-32x
            arch: x86
    if: |
      github.event.issue.pull_request &&
      github.event.issue.state == 'open' &&
      contains(github.event.comment.body, "!benchmark")
    env:
      CARGO_NET_GIT_FETCH_WITH_CLI: "true"
    steps:
      - uses: xt0rted/pull-request-comment-branch@v2
        id: comment-branch

      - name: Checkout sources
        uses: actions/checkout@v4
        if: success()
        with:
          ref: ${{ steps.comment-branch.outputs.head_sha }}

      - name: Set up git private repo access
        run: |
          git config --global url."https://${{ secrets.PRIVATE_PULL_TOKEN }}@github.com/".insteadOf ssh://git@github.com
          git config --global url."https://${{ secrets.PRIVATE_PULL_TOKEN }}@github.com".insteadOf https://github.com

      - uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v2
      - name: Install deps
        run: |
          sudo apt-get update && sudo apt-get install -y pkg-config libudev-dev
          cargo install cargo-criterion

      - name: Run all benchmarks
        id: benchmarks-run
        run: |
          output=""
          if echo '${{ github.event.comment.body }}' | grep -q '!benchmark --prod'; then
            for bench in $(find light-client/benches -name '*_prod.rs'); do
              bench_name=$(basename $bench .rs)
              result=$(cargo criterion --features aptos --bench $bench_name)
              output+="<details><summary>${bench_name}</summary>$(printf "$result")</details>"
            done
          elif echo '${{ github.event.comment.body }}' | grep -q '!benchmark'; then
            for bench in $(find light-client/benches -name '*_base.rs'); do
              bench_name=$(basename $bench .rs)
              result=$(cargo criterion --features aptos --bench $bench_name)
              output+="<details><summary>${bench_name}</summary>$(printf "$result")</details>"
            done
          fi
          echo "BENCH_RES<<EOF" >> $GITHUB_OUTPUT
          printf "$output\n" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
        working-directory: ${{ github.workspace }}/aptos
        env:
          RUST_LOG: "debug"
          RUSTFLAGS: "-C target-cpu=native"


      - name: Comment on successful run
        if: success()
        uses: peter-evans/create-or-update-comment@v4
        with:
          issue-number: ${{ github.event.issue.number }}
          body: |
            `${{ matrix.comment }}` action succeeded! :rocket:

            https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
            
            ${{ steps.benchmarks-run.outputs.BENCH_RES }}

      - name: Comment on failing run
        if: failure()
        uses: peter-evans/create-or-update-comment@v4
        with:
          issue-number: ${{ github.event.issue.number }}
          body: |
            `${{ matrix.comment }}` action failed! :x:

            https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}